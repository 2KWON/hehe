{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;uBAEO,SAAS;;;;qBACX,SAAS;;;;iCACR,sBAAsB;;;;oBACxB,MAAM;;;;;AAGvB,IAAI,+BAAO,MAAM,EAAE;AAAE,SAAO,CAAC,eAAe,CAAC,CAAC;CAAE;;;AAGhD,IAAI,GAAG,GAAG,2BAAS,CAAC;AACpB,IAAI,MAAM,GAAG,kBAAK,YAAY,CAAC,GAAG,CAAC,CAAC;AACpC,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE;AAC1C,aAAW,EAAE,+BAAO,GAAG,KAAK,YAAY;AACxC,MAAI,EAAE,mBAAmB;CAC1B,CAAC,CAAC;AACH,OAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,CAAC;AACvC,OAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;;;AAGzB,SAAS,WAAW,GAAG;AACrB,KAAG,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,+BAAO,IAAI,EAAE,+BAAO,EAAE,EAAE,YAAW;AACtE,WAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,+BAAO,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;GACxF,CAAC,CAAC;CACJ;;AAED,mBAAM,SAAS,CAAC,IAAI,EAAE,CACnB,IAAI,CAAC,WAAW,CAAC,SACZ,CAAC,UAAS,GAAG,EAAE;AACnB,SAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,GAAG,CAAC,CAAC;CAC7D,CAAC,CAAC;;;AAGL,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport sqldb from './sqldb';\nimport config from './config/environment';\nimport http from 'http';\n\n// Populate databases with sample data\nif (config.seedDB) { require('./config/seed'); }\n\n// Setup server\nvar app = express();\nvar server = http.createServer(app);\nvar socketio = require('socket.io')(server, {\n  serveClient: config.env !== 'production',\n  path: '/socket.io-client'\n});\nrequire('./config/socketio')(socketio);\nrequire('./config/express')(app);\nrequire('./routes')(app);\n\n// Start server\nfunction startServer() {\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n\nsqldb.sequelize.sync()\n  .then(startServer)\n  .catch(function(err) {\n    console.log('Server failed to start due to error: %s', err);\n  });\n\n// Expose app\nexports = module.exports = app;\n"]}